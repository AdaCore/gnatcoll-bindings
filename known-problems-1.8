==============================
Known Problems in Gnatcoll 1.8
==============================

Copyright (C) 2013-2016, AdaCore

KP-18-P621-006 GNATCOLL.Project editing aggregated projects fails

  Problem:    When editing an aggregated project, GNATCOLL would fail
              with an exception.

  Status:     Fixed in Gnatcoll 17.0 on 2016-06-21

  Workaround: Edit the project file manually (this bug mostly impacts
              users of GPS who want to edit their project graphically).

KP-18-P620-027 Invalid conversions with GNATCOLL.Iconv stub package

  Problem:    If Iconv support is not enabled, a stubbed version of
              GNATCOLL.Iconv was installed that would silently pass
              data through unconverted, in violation of the documented
              specification. This bogus stub package has been removed.
              Also, GNATCOLL.Xref (which depends on a working Iconv
              implementation) has been moved to its own separate
              project file: gnatcoll_xref.gpr

  Status:     Fixed in Gnatcoll 17.0 on 2016-08-30

  Workaround: Make sure to build GNATCOLL with a working iconv
              implementation.

KP-18-P503-055 gnatinspect: body of package does not depend on spec

  Problem:    When GNATCOLL.Xref or gnatinspect are used to generate a
              cross-reference database from the ALI files created by
              the compiler, they do not store the fact that the body
              of a package implicitly always depends on its spec. The
              result is the dependency browser in GPS, for instance,
              also does not display this information.

  Status:     Fixed in Gnatcoll 17.0 on 2016-05-26

  Workaround: You can put an explicit with in the body of the
              package.

KP-18-P401-004 GNATCOLL.JSON and tasks

  Problem:    The reference counters used by this package are not task
              safe, and thus could become corrupted when the same JSON
              data is passed from one task to another.

  Status:     Fixed in Gnatcoll 17.0 on 2016-04-04

  Workaround: Wrap the JSON data with protected types, although this will
              be slower.

KP-18-P120-046 Link against Gnatcoll_Python fails on Windows

  Problem:    It is not possible to link with the Gnatlcoll_Python shared
              library on Windows. Some missing symbols are reported.

  Status:     Fixed in Gnatcoll 17.0 on 2016-02-03

  Workaround: Use the static version of this library.

KP-18-P115-021 Email.Get_Recipients crash on invalid headers

  Problem:    Get_Recipients will raise an exception for messages
              containing recipient with invalid UTF-8 encodings.

  Status:     Fixed in Gnatcoll 17.0 on 2016-01-15

  Workaround: Do not process such invalid messages.

KP-18-P111-053 Leak when loading a project with subunits.

  Problem:    Used more and more memory each time when recompute a project.

  Status:     Fixed in Gnatcoll 17.0 on 2016-19-01

  Workaround: No workaround.

KP-18-OC08-003 SQL_Table_List and SQL_Left_Join_Table not task safe.

  Problem:    Concurrent copy from constant of that types brokes internal
              reference counter which could cause unexpected Constraint_Error
              further.

  Status:     Fixed in Gnatcoll 17.0 on 2015-12-08

  Workaround: Use protected operations for such copies.

KP-18-OB30-013 gnatinspect crashes on parsing project tree

  Problem:    Gnatinspect crashes with a constraint error on a rare and rather
              complex project structure.

  Status:     Fixed in Gnatcoll 17.0 on 2015-12-15

  Workaround: No workaround.

KP-18-OB02-038 Projects: default branch in case statement breaks saving

  Problem:    When a case statement in the project file has a default branch
              and not all of possible choices mentioned the remaining
              choices appear after the "when others" branch thus making
              the project illegal.

  Status:     Fixed in Gnatcoll 17.0 on 2015-11-06

  Workaround: Specify all choices in case statements.

KP-18-OA16-022 GNATCOLL.Config fails when first line is empty

  Problem:    When GNATCOLL.Config is used to parse a file whose first line
              is empty, it results in a constraint error.

  Status:     Fixed in Gnatcoll 17.0 on 2015-10-30

  Workaround: Remove the empty line in the config file
