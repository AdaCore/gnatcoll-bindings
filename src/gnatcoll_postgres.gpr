with "../gnatcoll_shared";
with "gnatcoll";

project GnatColl_Postgres is

   for Library_Kind    use GnatColl_Shared.Library_Type;
   for Object_Dir
      use Gnatcoll_Shared'Object_Dir & "/postgres/" & Project'Library_Kind;
   for Library_Dir
      use Gnatcoll_Shared'Library_Dir & "/postgres/" & Project'Library_Kind;
   for Library_Name    use GnatColl_Shared.Name & "_postgres";
   for Library_Version use
      "lib" & Project'Library_Name
      & GnatColl_Shared.So_Ext & "." & GnatColl_Shared.Version;

   case GnatColl_Shared.Postgres is
      when "no" =>
        for Languages use ("Ada");
        for Source_Dirs use ("postgres", "postgres/no_postgres");
      when "yes" =>
        for Languages use ("Ada", "C");
        for Source_Dirs use ("postgres", "postgres/with_postgres");
        for Library_Options use (GnatColl_Shared.Postgres_Dir) & "-lpq";
   end case;

   package Builder  renames GnatColl_Shared.Builder;

   package Compiler is
      for Switches ("Ada") use GnatColl_Shared.Compiler'Switches ("Ada");

      case GnatColl_Shared.Postgres_Has_PQprepare is
         when "yes" =>
           for Switches ("C") use
              GnatColl_Shared.Compiler'Switches ("C")
              & ("-DHAS_PQPREPARE");
         when "no" =>
           for Switches ("C") use
              GnatColl_Shared.Compiler'Switches ("C");
      end case;
   end Compiler;

   package Linker is
      case GnatColl_Shared.Postgres is
         when "no" =>
            null;
         when "yes" =>
            for Linker_Options use (Gnatcoll_Shared.Postgres_Dir) & "-lpq";
      end case;
   end Linker;

   package Ide      renames GnatColl_Shared.Ide;

end GnatColl_Postgres;
