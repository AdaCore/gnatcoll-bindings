==============================
Known Problems in Gnatcoll 1.5
==============================

Copyright (C) 2012-2013, AdaCore

KP-15-MA08-010 Check_Connection fails with sqlite

  Problem:    Calling GNATCOLL.SQL.Exec.Check_Connection always returns False
              when using sqlite.

  Status:     Fixed in Gnatcoll 1.6.0

  Workaround: This function is not necessary for sqlite (the fix always
              True).

KP-15-M701-028 PyDict_Next iterator won't iterate

  Problem:    On 64 bits OS the iterator won't iterate on Python dictionary.

  Status:     Fixed in Gnatcoll 1.6.0

  Workaround: Use your own import routine with proper type for (size_t) Pos.

KP-15-M605-001 GNATCOLL.JSON parsing string ending with \\

  Problem:    GNATCOLL.JSON fails parsing a string that ends with a backslash
              as in "test\\".

  Status:     Fixed in Gnatcoll 1.6.0

  Workaround: None

KP-15-M604-002 GNATCOLL.JSON does not decode escaped slash

  Problem:    GNATCOLL.JSON does not accept a string that contains the
              sequence "\/", although it is valid JSON.

  Status:     Fixed in Gnatcoll 1.6.0

  Workaround: You can remove the \, since / itself is not a special character
              in any case.

KP-15-M320-003 GNATCOLL.Projects missing error messages

  Problem:    When a project has unresolved with statements and other errors,
              the list of error messages omits the missing with statements.
              This results in different error messages compared to gprbuild.

  Status:     Fixed in Gnatcoll 1.6.0

  Workaround: Compile with gprbuild to get the full list of error messages.

KP-15-M220-011 GNATCOLL.Projects.File_From_Unit fails on runtime files

  Problem:    This function does not handle units coming from the GNAT runtime
              and that are using special ("krunched") names, like a-textio.ads
              for instance.

  Status:     Fixed in Gnatcoll 1.6.0

  Workaround: You can explicitly test whether the file starts with "ada-",
              "system-", "interfaces-" or "gnat-" and call Krunch.Krunch.
              The solution implemented for this issue removed the parameter
              Check_Predefined_Library, which did an incorrect job anyway.

KP-15-M111-002 Compatibility with GtkAda 3.x

  Problem:    The API for Gtk_Tree_Model has changed slightly in GtkAda 3.x,
              and GNATCOLL.VFS.GtkAda.Get_File was not compatible. To ensure
              that GNATCOLL works with both GtkAda 2.x and 3.x, the first
              parameter of Get_File is now a Gtk_Tree_Model, rather than an
              access to Gtk_Tree_Model_Record, which might require an explicit
              cast in user code.

  Status:     Fixed in Gnatcoll 1.6.0

  Workaround: None.

KP-15-M107-026 Stack overflow may occur when writing large JSON objects

  Problem:    When using GNATCOLL.JSON.Write on a large JSON object, a stack
              overflow may occur.

  Status:     Fixed in Gnatcoll 1.6.0

  Workaround: None.

KP-15-LB06-010 Wrong day of week in date representation

  Problem:    GNATCOLL.Email.Utils.Format_Date will produce an invalid
              day of week name for some dates.

  Status:     Fixed in Gnatcoll 1.6.0

  Workaround: Use standard date formatting functions instead.
